package ledgerstate

import (
	"encoding/json"
)

// public state structure
// store in ledger and couchdb
type PublicState struct {
	// from user's input dataId
	Id string `json:"id"`

	// application name
	AppName string `json:"appName"`

	// creator
	CreatorMSPID string `json:"creatorMSPID"`
	CreatorId    string `json:"creatorId"`

	// business data in json format
	DataJson   json.RawMessage `json:"dataJson,omitempty"`
	DataString string          `json:"data,omitempty"`

	// private data meta info
	PrivateMetaInfo *PrivateMetaInfo `json:"privateMetaInfo"`

	// create/update time
	CreatedAt int64 `json:"createdAt"`
	UpdatedAt int64 `json:"updatedAt"`
}

// private data meta info
// used for retrieve
// one may share private data to many organizations
type PrivateMetaInfo struct {
	// private data id, generated by internal system
	SystemId              string   `json:"systemId"`
	Channel               string   `json:"channel"`
	Chaincode             string   `json:"chaincode"`
	CreatorCollectionName string   `json:"creatorCollectionName"`
	ShareCollectionNames  []string `json:"shareCollectionNames"`
}

type PrivateState struct {
	// private data id, generate by internal system
	Id           string          `json:"id"`
	PublicDataId string          `json:"publicDataId"`
	DataJson     json.RawMessage `json:"dataJson,omitempty"`
	DataString   string          `json:"data,omitempty"`
	CreatedAt    int64           `json:"createdAt"`
}

// when get/query public world state, the response structure
type PublicResponse struct {
}

// when get/query private world state, the response structure
type PrivateResponse struct {
}
